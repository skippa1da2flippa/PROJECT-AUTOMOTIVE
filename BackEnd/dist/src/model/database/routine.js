"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutineSchema = void 0;
var mongoose_1 = require("mongoose");
// TO DO since the name is unique we'll add routine name with this pattern: routine_name/userID, thanks to this we'll be able to make name unique just for the single user
exports.RoutineSchema = new mongoose_1.Schema({
    name: {
        type: mongoose_1.SchemaTypes.String,
        required: true,
        unique: true
    },
    temperature: {
        type: mongoose_1.SchemaTypes.Number,
    },
    lightsColor: {
        type: mongoose_1.SchemaTypes.String,
        default: "#FFFFFF"
    },
    music: {
        type: [mongoose_1.SchemaTypes.String],
        default: ["classical"]
    },
    path: {
    // needed data to work with google api
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGluZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2RlbC9kYXRhYmFzZS9yb3V0aW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUFzRDtBQXdCdEQsMEtBQTBLO0FBRTdKLFFBQUEsYUFBYSxHQUFHLElBQUksaUJBQU0sQ0FDbkM7SUFDSSxJQUFJLEVBQUU7UUFDRixJQUFJLEVBQUUsc0JBQVcsQ0FBQyxNQUFNO1FBQ3hCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsTUFBTSxFQUFFLElBQUk7S0FDZjtJQUNELFdBQVcsRUFBRTtRQUNULElBQUksRUFBRSxzQkFBVyxDQUFDLE1BQU07S0FDM0I7SUFDRCxXQUFXLEVBQUU7UUFDVCxJQUFJLEVBQUUsc0JBQVcsQ0FBQyxNQUFNO1FBQ3hCLE9BQU8sRUFBRSxTQUFTO0tBQ3JCO0lBQ0QsS0FBSyxFQUFFO1FBQ0gsSUFBSSxFQUFFLENBQUMsc0JBQVcsQ0FBQyxNQUFNLENBQUM7UUFDMUIsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDO0tBQ3pCO0lBQ0QsSUFBSSxFQUFFO0lBQ0Ysc0NBQXNDO0tBQ3pDO0NBQ0osQ0FDSixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBTY2hlbWFUeXBlcywgVHlwZXMgfSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSb3V0aW5lIHtcclxuXHJcbiAgICAvL3JvdXRpbmUgbmFtZVxyXG4gICAgbmFtZTogc3RyaW5nXHJcblxyXG4gICAgLy9BQyB0ZW1wZXJhdHVyZVxyXG4gICAgdGVtcGVyYXR1cmU6IG51bWJlcixcclxuXHJcbiAgICAvL3RoaXMgbWF5IG5lZWQgdG8gYmUgcmVwcmVzZW50ZWQgYXMgYSB3aG9sZSBjb2xsZWN0aW9uIGlmIGl0J3MgbW9yZSB0aGFuIGp1c3Qgb25lIHNldCBvZiBsaWdodHNcclxuICAgIGxpZ2h0c0NvbG9yOiBzdHJpbmcsXHJcblxyXG4gICAgLy9yZXByZXNlbnQgd2hpY2ggZ2VucmUgaXMgcmVsYXRlZCB0byBhIGNlcnRhaW4gcm91dGluZVxyXG4gICAgbXVzaWM6IHN0cmluZ1tdXHJcblxyXG4gICAgLy9jb3JyZWN0IHRoZSB0eXBlXHJcbiAgICBwYXRoOiBhbnlcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSb3V0aW5lU3ViRG9jdW1lbnQgZXh0ZW5kcyBSb3V0aW5lLCBUeXBlcy5TdWJkb2N1bWVudCB7fVxyXG5cclxuXHJcbi8vIFRPIERPIHNpbmNlIHRoZSBuYW1lIGlzIHVuaXF1ZSB3ZSdsbCBhZGQgcm91dGluZSBuYW1lIHdpdGggdGhpcyBwYXR0ZXJuOiByb3V0aW5lX25hbWUvdXNlcklELCB0aGFua3MgdG8gdGhpcyB3ZSdsbCBiZSBhYmxlIHRvIG1ha2UgbmFtZSB1bmlxdWUganVzdCBmb3IgdGhlIHNpbmdsZSB1c2VyXHJcblxyXG5leHBvcnQgY29uc3QgUm91dGluZVNjaGVtYSA9IG5ldyBTY2hlbWE8Um91dGluZVN1YkRvY3VtZW50PihcclxuICAgIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNjaGVtYVR5cGVzLlN0cmluZyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsIFxyXG4gICAgICAgICAgICB1bmlxdWU6IHRydWVcclxuICAgICAgICB9LCBcclxuICAgICAgICB0ZW1wZXJhdHVyZToge1xyXG4gICAgICAgICAgICB0eXBlOiBTY2hlbWFUeXBlcy5OdW1iZXIsXHJcbiAgICAgICAgfSwgXHJcbiAgICAgICAgbGlnaHRzQ29sb3I6IHtcclxuICAgICAgICAgICAgdHlwZTogU2NoZW1hVHlwZXMuU3RyaW5nLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBcIiNGRkZGRkZcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbXVzaWM6IHtcclxuICAgICAgICAgICAgdHlwZTogW1NjaGVtYVR5cGVzLlN0cmluZ10sIFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBbXCJjbGFzc2ljYWxcIl1cclxuICAgICAgICB9LCBcclxuICAgICAgICBwYXRoOiB7XHJcbiAgICAgICAgICAgIC8vIG5lZWRlZCBkYXRhIHRvIHdvcmsgd2l0aCBnb29nbGUgYXBpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4pIl19